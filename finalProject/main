import gc
import cotask
import task_share
import leftTask, rightTask, imuTask, lineTask, bumpTask

def main():
    # Initialize shares
    centroid = task_share.Share('f', thread_protect=False, name="Centroid")
    heading = task_share.Share('f', thread_protect=False, name="heading")
    lineType = task_share.Share('b', thread_protect=False, name="line type")
    bumped = task_share.Share('b', thread_protect=False, name="bumped")
    stage = task_share.Share('b', thread_protect=False, name="stage")

    # Initialize tasks
    task1 = cotask.Task(rightTask.rightMotor, name="Right Motor", priority=5,
                        period=20,profile=True, trace=False, 
                        shares=(centroid, lineType, heading, bumped, stage))
    task2 = cotask.Task(leftTask.leftMotor, name="Left Motor", priority=4,
                        period=20, profile=True, trace=False, 
                        shares=(centroid, lineType, heading, bumped, stage))
    task3 = cotask.Task(lineTask.lineSensor, name="Line Sensor", priority=3,
                        period=20,profile=True, trace=False, 
                        shares=(centroid, lineType))
    task4 = cotask.Task(imuTask.IMU, name = "IMU", priority = 1, period = 20, 
                        profile = True, trace = False, shares = (heading))
    task5 = cotask.Task(bumpTask.BumpSensor, name = "Bump Sensor", priority = 2,
                        period = 15, profile = True, trace = False,
                        shares = (bumped, stage))

    # Add tasks to task list
    cotask.task_list.append(task1)
    cotask.task_list.append(task2)
    cotask.task_list.append(task3)
    cotask.task_list.append(task4)
    cotask.task_list.append(task5)
    
    # Run the memory garbage collector to ensure memory is as defragmented as
    # possible before the real-time scheduler is started
    gc.collect()

    # Run the scheduler with the chosen scheduling algorithm. Quit if ^C pressed
    while True:
        try:
            cotask.task_list.pri_sched()
        except KeyboardInterrupt:
            break
    print('\n' + str (cotask.task_list))
    print(task_share.show_all())
    print(task1.get_trace())
    print('')

if __name__ == "__main__":
    main()
